/*
 * This file is generated by jOOQ.
 */
package org.hexastacks.heroesdesk.kotlin.ports.pgjooq;


import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.Scope;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.ScopeUser;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.User;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.records.ScopeRecord;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.records.ScopeUserRecord;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.records.UserRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * heroesdeskschema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ScopeRecord> PK_SCOPE = Internal.createUniqueKey(Scope.SCOPE, DSL.name("PK_SCOPE"), new TableField[] { Scope.SCOPE.KEY }, true);
    public static final UniqueKey<ScopeUserRecord> PK_SCOPE_USER = Internal.createUniqueKey(ScopeUser.SCOPE_USER, DSL.name("PK_Scope_User"), new TableField[] { ScopeUser.SCOPE_USER.SCOPE_KEY, ScopeUser.SCOPE_USER.ID }, true);
    public static final UniqueKey<UserRecord> PK_USER_ID = Internal.createUniqueKey(User.USER, DSL.name("PK_USER_ID"), new TableField[] { User.USER.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ScopeUserRecord, ScopeRecord> SCOPE_USER__FK_SCOPE = Internal.createForeignKey(ScopeUser.SCOPE_USER, DSL.name("FK_Scope"), new TableField[] { ScopeUser.SCOPE_USER.SCOPE_KEY }, Keys.PK_SCOPE, new TableField[] { Scope.SCOPE.KEY }, true);
    public static final ForeignKey<ScopeUserRecord, UserRecord> SCOPE_USER__FK_USER = Internal.createForeignKey(ScopeUser.SCOPE_USER, DSL.name("FK_User"), new TableField[] { ScopeUser.SCOPE_USER.ID }, Keys.PK_USER_ID, new TableField[] { User.USER.ID }, true);
}
