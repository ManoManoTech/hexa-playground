/*
 * This file is generated by jOOQ.
 */
package org.hexastacks.heroesdesk.kotlin.ports.pgjooq;


import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.Mission;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.MissionUser;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.Squad;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.SquadUser;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.records.MissionRecord;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.records.MissionUserRecord;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.records.SquadRecord;
import org.hexastacks.heroesdesk.kotlin.ports.pgjooq.tables.records.SquadUserRecord;
import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * heroesdeskschema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<MissionRecord> PK_MISSION = Internal.createUniqueKey(Mission.MISSION, DSL.name("PK_Mission"), new TableField[] { Mission.MISSION.ID }, true);
    public static final UniqueKey<MissionUserRecord> PK_MISSION_USER = Internal.createUniqueKey(MissionUser.MISSION_USER, DSL.name("PK_Mission_User"), new TableField[] { MissionUser.MISSION_USER.MISSION_ID, MissionUser.MISSION_USER.USER_ID }, true);
    public static final UniqueKey<SquadRecord> CHK_NAME_UNIQUE = Internal.createUniqueKey(Squad.SQUAD, DSL.name("CHK_name_UNIQUE"), new TableField[] { Squad.SQUAD.NAME }, true);
    public static final UniqueKey<SquadRecord> PK_SQUAD = Internal.createUniqueKey(Squad.SQUAD, DSL.name("PK_Squad"), new TableField[] { Squad.SQUAD.KEY }, true);
    public static final UniqueKey<SquadUserRecord> PK_SQUAD_USER = Internal.createUniqueKey(SquadUser.SQUAD_USER, DSL.name("PK_Squad_User"), new TableField[] { SquadUser.SQUAD_USER.SQUAD_KEY, SquadUser.SQUAD_USER.USER_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MissionRecord, SquadRecord> MISSION__FK_SQUAD_KEY = Internal.createForeignKey(Mission.MISSION, DSL.name("FK_squad_key"), new TableField[] { Mission.MISSION.SQUAD_KEY }, Keys.PK_SQUAD, new TableField[] { Squad.SQUAD.KEY }, true);
    public static final ForeignKey<MissionUserRecord, MissionRecord> MISSION_USER__FK_MISSION = Internal.createForeignKey(MissionUser.MISSION_USER, DSL.name("FK_Mission"), new TableField[] { MissionUser.MISSION_USER.MISSION_ID }, Keys.PK_MISSION, new TableField[] { Mission.MISSION.ID }, true);
    public static final ForeignKey<SquadUserRecord, SquadRecord> SQUAD_USER__FK_SQUAD = Internal.createForeignKey(SquadUser.SQUAD_USER, DSL.name("FK_Squad"), new TableField[] { SquadUser.SQUAD_USER.SQUAD_KEY }, Keys.PK_SQUAD, new TableField[] { Squad.SQUAD.KEY }, true);
}
